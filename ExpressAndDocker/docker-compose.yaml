### Base Image for Docker-Compose Services
version: "3"

services:
  nginxproxy:
    container_name: "nginxproxy"
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ### required for Let's Encrypt certificates
      - nginx_certs:/etc/nginx/certs:ro
      - nginx_vhosts:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - expressdocker
    networks:
      - MainNetwork
      - AppNetwork

  webdefault:
    container_name: "nginxMain"
    image: nginx
    environment:
      - VIRTUAL_HOST=xxx
      - LETSENCRYPT_HOST=xxx
    networks:
      - MainNetwork
    restart: always

  webexpressapp:
    container_name: "nginxAppMain"
    image: nginx
    environment:
      - VIRTUAL_HOST=xxx
      - LETSENCRYPT_HOST=xxx
    networks:
      - AppNetwork
    restart: always

  letsencrypt:
    container_name: "letsencrypt"
    image: nginxproxy/acme-companion
    environment:
      - DEFAULT_EMAIL=sandro.spengler@web.de
      - NGINX_PROXY_CONTAINER=nginxproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs:rw
      - nginx_vhosts:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
      - ~/LetsEncrypt/certs:/etc/nginx/certs
    networks:
      - MainNetwork
    restart: always

  expressdocker:
    container_name: "NodeServerMain"
    image: sandrospengler/myexpressapp
    build:
      context: .
    environment:
      - PORT=5000
      - DB_CONNECTION=""
      - VIRTUAL_HOST=docker.localhost
      - LETSENCRYPT_HOST=docker.localhost
    depends_on:
      - mongodocker
    networks:
      - AppNetwork

  mongodocker:
    container_name: "MongoDBMain"
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=""
      - MONGO_INITDB_ROOT_PASSWORD=""
    volumes:
      - ~/mongo/data:/data/db
    networks:
      - AppNetwork

networks:
  MainNetwork:
  AppNetwork:

volumes:
  #### NGINX reverse proxy container volumes
  nginx_certs:
  nginx_vhosts:
  nginx_html: